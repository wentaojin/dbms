task-name = "oracle33totidb145_task"
task-rule-name = "oracle33totidb145_rule"

[data-migrate-param]
# 初始化表任务并发数【写下游 meta 数据库】
table-thread = 100
# 数据写入批量大小
batch-size = 50
# 控制下游库名、表名、字段名大小写
case-field-rule = "1"
# 表串行运行，表内并发
# 任务 chunk 数，固定动作，一旦确认，不能更改，除非设置 enable-checkpoint = false，重新导出导入
# 1、代表每张表每并发处理多少行数
# 2、建议参数值是 insert-batch-size 整数倍，会根据 insert-batch-size 大小切分
chunk-size = 100000
# 表内 SQL 执行并发数，表示同时多少并发 SQL 读取上游表数据，可动态变更
sql-thread = 32
# 表内每 sql-threads 线程写下游并发数，可动态变更
apply-thread = 64
# 关于全量断点恢复
#   - 若想断点恢复，设置 enable-checkpoint = true,首次一旦运行则 chunk-size 数不能调整，
#   - 若不想断点恢复或者重新调整 chunk-size 数，设置 enable-checkpoint = false,重新运行全量任务
#   - 无法断点续传期间，则需要设置 enable-checkpoint = false 重新导入导出
enable-checkpoint = true
# 是否一致性读 ORA
consistent-read = false
# 指定分片 chunk sql 查询 hint
sql-hint = "/*+ PARALLEL(8) */"
# calltimeout，单位：秒
call-timeout = 36000