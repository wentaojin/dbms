name: release
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Create Code Release
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/go
      GOBIN: ${{ github.workspace }}/go/bin
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    steps:
      - name: Setup Compile Timezone
        run: |
          echo "TZ=Asia/Shanghai" >> $GITHUB_ENV
      - name: Get Compile Timezone
        run: |
          date
      - name: Checkout Project Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: ${{ github.workspace }}      
      - name: Remove Old Docker Environment
        run: |
          sudo apt-get update
          sudo apt remove docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc
          sudo apt-get install curl -y
      - name: Prepare New Docker Environment
        run: |
          curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
      - name: View New Docker Environment
        run: |
          sudo docker -v
          sudo docker info
      - name: Build Cross Platform Environment
        run: |
          sudo docker build -f build.dockerfile -t build_docker_img .
      - name: Build Cross Platform DBMS Binary
        run: |
          sudo mkdir -p ${{ github.workspace }}/gocache
          sudo docker run --rm -v ${{ github.workspace }}/gocache:/gocache build_docker_img

          sudo mkdir -p ${{ github.workspace }}/build
          sudo chmod -R 777 ${{ github.workspace }}/build
      - name: Pack Platform DBMS Linux AMD64
        run: |
          ls -lnrt ${{ github.workspace }}/gocache/linux/amd64
          
          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64
          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/example
          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/instantclient
          
          cd ${{ github.workspace }}/gocache/linux/amd64
          pwd
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/dbms-master-${{ github.ref_name }}-linux-amd64.tar.gz dbms-master
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/dbms-worker-${{ github.ref_name }}-linux-amd64.tar.gz dbms-worker
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/dbms-cluster-${{ github.ref_name }}-linux-amd64.tar.gz dbms-cluster
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/dbms-ctl-${{ github.ref_name }}-linux-amd64.tar.gz dbms-ctl
          
          sudo cp -r ${{ github.workspace }}/example/* ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/example/
          sudo cp -r ${{ github.workspace }}/local_install.sh ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/
          sudo cp -r ${{ github.workspace }}/instantclient/instantclient-v19.23.0-linux-amd64.tar.gz ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/instantclient/


          sudo chmod +x ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/local_install.sh
          cd ${{ github.workspace }}/build
          pwd
          sudo tar -zcvf dbms-community-${{ github.ref_name }}-linux-amd64.tar.gz dbms-community-${{ github.ref_name }}-linux-amd64/

          ls -lnrt ${{ github.workspace }}/build
      - name: Pack Platform DBMS Linux ARM64
        run: |
          ls -lnrt ${{ github.workspace }}/gocache/linux/arm64

          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64
          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/example
          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/instantclient

          cd ${{ github.workspace }}/gocache/linux/arm64
          pwd
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/dbms-master-${{ github.ref_name }}-linux-arm64.tar.gz dbms-master
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/dbms-worker-${{ github.ref_name }}-linux-arm64.tar.gz dbms-worker
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/dbms-cluster-${{ github.ref_name }}-linux-arm64.tar.gz dbms-cluster
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/dbms-ctl-${{ github.ref_name }}-linux-arm64.tar.gz dbms-ctl

          sudo cp -r ${{ github.workspace }}/example/* ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/example/
          sudo cp -r ${{ github.workspace }}/local_install.sh ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/
          sudo cp -r ${{ github.workspace }}/instantclient/instantclient-v19.23.0-linux-arm64.tar.gz ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/instantclient/

          sudo chmod +x ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/local_install.sh
          cd ${{ github.workspace }}/build
          pwd
          sudo tar -zcvf dbms-community-${{ github.ref_name }}-linux-arm64.tar.gz dbms-community-${{ github.ref_name }}-linux-arm64/

          ls -lnrt ${{ github.workspace }}/build
         
      - name: Install Git Changelog CLI
        run: |
          docker pull quay.io/git-chglog/git-chglog:latest
      - name: Generate Changelog from Commit Messages
        id: generate_changelog
        run: |
          docker run -v "$PWD":/workdir quay.io/git-chglog/git-chglog --config /workdir/sample/gitchglog_config.yml ${{ github.ref_name }} > CHANGELOG.md
      - name: Upload Platform Asserts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: CHANGELOG.md
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
          files: |
            ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64.tar.gz
            ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64.tar.gz
