name: release
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Create Code Release
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/go
      GOBIN: ${{ github.workspace }}/go/bin
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    steps:
      - name: Checkout Project Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: ${{ github.workspace }}
      - name: Build Golang Environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
          cache: true
      - name: View Golang Environment
        run: |
          go version
          go env
      - name: Generate Golang Ldflags
        id: genLdflags
        run: |
          CODEREPO="github.com/${{ github.repository }}"
          COMMIT="-X \"${CODEREPO}/version.Version=`git describe --always --no-match --tags --dirty="-dev"`\""
          BUILDTS="-X \"${CODEREPO}/version.BuildTS=`TZ=CST-8 date '+%Y-%m-%d %H:%M:%S'`\""
          GITHASH="-X \"${CODEREPO}/version.GitHash=`git rev-parse HEAD`\""
          GITREF="-X \"${CODEREPO}/version.GitBranch=`git rev-parse --abbrev-ref HEAD`\""
          LDFLAGS="-w -s ${COMMIT} ${BUILDTS} ${GITHASH} ${GITREF}"
          echo "ldflags=${LDFLAGS}" >> $GITHUB_ENV
      - name: Install Cross Platform Environment
        run: |
          go install src.techknowlogick.com/xgo@latest
      - name: Cross Platform Compile Linux amd64
        run: |
          cd ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-master-${{ github.ref_name }} -targets=linux/amd64 -pkg component/master ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-worker-${{ github.ref_name }} -targets=linux/amd64 -pkg component/worker ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-${{ github.ref_name }} -targets=linux/amd64 -pkg component/cluster ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbmsctl-${{ github.ref_name }} -targets=linux/amd64 -pkg component/cli ${{ github.workspace }}

          sudo mv ${{ github.workspace }}/bin/dbms-master-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms-master 
          sudo mv ${{ github.workspace }}/bin/dbms-worker-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms-worker 
          sudo mv ${{ github.workspace }}/bin/dbms-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms 
          sudo mv ${{ github.workspace }}/bin/dbmsctl-${{ github.ref_name }} ${{ github.workspace }}/bin/dbmsctl 
          
          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64
          sudo chmod -R 777 ${{ github.workspace }}/build
          
          cd ${{ github.workspace }}/bin
          pwd
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/dbms-master-${{ github.ref_name }}-linux-amd64.tar.gz dbms-master
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/dbms-worker-${{ github.ref_name }}-linux-amd64.tar.gz dbms-worker
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/dbms-${{ github.ref_name }}-linux-amd64.tar.gz dbms
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-amd64/dbmsctl-${{ github.ref_name }}-linux-amd64.tar.gz dbmsctl
          
          cd ${{ github.workspace }}/build
          pwd
          sudo tar -zcvf dbms-community-${{ github.ref_name }}-linux-amd64.tar.gz dbms-community-${{ github.ref_name }}-linux-amd64/

          ls -lnrt ${{ github.workspace }}/build
          ls -lnrt ${{ github.workspace }}/bin
          sudo rm -rf ${{ github.workspace }}/bin
          
          ls -lnrt ${{ github.workspace }}/bin

      - name: Cross Platform Compile Linux arm64
        run: |
          cd ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-master-${{ github.ref_name }} -targets=linux/arm64 -pkg component/master ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-worker-${{ github.ref_name }} -targets=linux/arm64 -pkg component/worker ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-${{ github.ref_name }} -targets=linux/arm64 -pkg component/cluster ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbmsctl-${{ github.ref_name }} -targets=linux/arm64 -pkg component/cli ${{ github.workspace }}

          sudo mv ${{ github.workspace }}/bin/dbms-master-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms-master 
          sudo mv ${{ github.workspace }}/bin/dbms-worker-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms-worker 
          sudo mv ${{ github.workspace }}/bin/dbms-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms 
          sudo mv ${{ github.workspace }}/bin/dbmsctl-${{ github.ref_name }} ${{ github.workspace }}/bin/dbmsctl 

          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64
          sudo chmod -R 777 ${{ github.workspace }}/build

          cd ${{ github.workspace }}/bin
          pwd
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/dbms-master-${{ github.ref_name }}-linux-arm64.tar.gz dbms-master
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/dbms-worker-${{ github.ref_name }}-linux-arm64.tar.gz dbms-worker
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/dbms-${{ github.ref_name }}-linux-arm64.tar.gz dbms
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-linux-arm64/dbmsctl-${{ github.ref_name }}-linux-arm64.tar.gz dbmsctl

          cd ${{ github.workspace }}/build
          pwd
          sudo tar -zcvf dbms-community-${{ github.ref_name }}-linux-arm64.tar.gz dbms-community-${{ github.ref_name }}-linux-arm64/

          ls -lnrt ${{ github.workspace }}/build
          ls -lnrt ${{ github.workspace }}/bin
          sudo rm -rf ${{ github.workspace }}/bin

          ls -lnrt ${{ github.workspace }}/bin

      - name: Cross Platform Compile Darwin amd64
        run: |
          cd ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-master-${{ github.ref_name }} -targets=darwin/amd64 -pkg component/master ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-worker-${{ github.ref_name }} -targets=darwin/amd64 -pkg component/worker ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-${{ github.ref_name }} -targets=darwin/amd64 -pkg component/cluster ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbmsctl-${{ github.ref_name }} -targets=darwin/amd64 -pkg component/cli ${{ github.workspace }}

          sudo mv ${{ github.workspace }}/bin/dbms-master-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms-master 
          sudo mv ${{ github.workspace }}/bin/dbms-worker-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms-worker 
          sudo mv ${{ github.workspace }}/bin/dbms-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms 
          sudo mv ${{ github.workspace }}/bin/dbmsctl-${{ github.ref_name }} ${{ github.workspace }}/bin/dbmsctl 

          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-amd64
          sudo chmod -R 777 ${{ github.workspace }}/build

          cd ${{ github.workspace }}/bin
          pwd
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-amd64/dbms-master-${{ github.ref_name }}-darwin-amd64.tar.gz dbms-master
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-amd64/dbms-worker-${{ github.ref_name }}-darwin-amd64.tar.gz dbms-worker
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-amd64/dbms-${{ github.ref_name }}-darwin-amd64.tar.gz dbms
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-amd64/dbmsctl-${{ github.ref_name }}-darwin-amd64.tar.gz dbmsctl

          cd ${{ github.workspace }}/build
          pwd
          sudo tar -zcvf dbms-community-${{ github.ref_name }}-darwin-amd64.tar.gz dbms-community-${{ github.ref_name }}-darwin-amd64/

          ls -lnrt ${{ github.workspace }}/build
          ls -lnrt ${{ github.workspace }}/bin
          sudo rm -rf ${{ github.workspace }}/bin

          ls -lnrt ${{ github.workspace }}/bin

      - name: Cross Platform Compile Darwin arm64
        run: |
          cd ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-master-${{ github.ref_name }} -targets=darwin/arm64 -pkg component/master ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-worker-${{ github.ref_name }} -targets=darwin/arm64 -pkg component/worker ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbms-${{ github.ref_name }} -targets=darwin/arm64 -pkg component/cluster ${{ github.workspace }}
          xgo -ldflags='${{ env.ldflags }}' -buildmode=default -dest bin -go go-1.21.x -out=dbmsctl-${{ github.ref_name }} -targets=darwin/arm64 -pkg component/cli ${{ github.workspace }}

          sudo mv ${{ github.workspace }}/bin/dbms-master-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms-master 
          sudo mv ${{ github.workspace }}/bin/dbms-worker-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms-worker 
          sudo mv ${{ github.workspace }}/bin/dbms-${{ github.ref_name }} ${{ github.workspace }}/bin/dbms 
          sudo mv ${{ github.workspace }}/bin/dbmsctl-${{ github.ref_name }} ${{ github.workspace }}/bin/dbmsctl 

          sudo mkdir -p ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-arm64
          sudo chmod -R 777 ${{ github.workspace }}/build

          cd ${{ github.workspace }}/bin
          pwd
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-arm64/dbms-master-${{ github.ref_name }}-darwin-arm64.tar.gz dbms-master
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-arm64/dbms-worker-${{ github.ref_name }}-darwin-arm64.tar.gz dbms-worker
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-arm64/dbms-${{ github.ref_name }}-darwin-arm64.tar.gz dbms
          sudo tar -zcvf ${{ github.workspace }}/build/dbms-community-${{ github.ref_name }}-darwin-arm64/dbmsctl-${{ github.ref_name }}-darwin-arm64.tar.gz dbmsctl

          cd ${{ github.workspace }}/build
          pwd
          sudo tar -zcvf dbms-community-${{ github.ref_name }}-darwin-arm64.tar.gz dbms-community-${{ github.ref_name }}-darwin-arm64/

          ls -lnrt ${{ github.workspace }}/build
          ls -lnrt ${{ github.workspace }}/bin
          sudo rm -rf ${{ github.workspace }}/bin

          ls -lnrt ${{ github.workspace }}/bin
      - name: Build Release Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          configuration: "configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Platform Asserts
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{steps.github_release.outputs.changelog}}
          files: |
            dbms-community-${{ github.ref_name }}-linux-amd64.tar.gz
            dbms-community-${{ github.ref_name }}-linux-arm64.tar.gz
            dbms-community-${{ github.ref_name }}-darwin-amd64.tar.gz
            dbms-community-${{ github.ref_name }}-darwin-arm64.tar.gz