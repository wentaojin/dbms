// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// ColumnStructRule defines model for ColumnStructRule.
type ColumnStructRule struct {
	ColumnTypeS   *string `json:"columnTypeS,omitempty"`
	ColumnTypeT   *string `json:"columnTypeT,omitempty"`
	DefaultValueS *string `json:"defaultValueS,omitempty"`
	DefaultValueT *string `json:"defaultValueT,omitempty"`
	SourceColumn  *string `json:"sourceColumn,omitempty"`
	SourceSchema  *string `json:"sourceSchema,omitempty"`
	SourceTable   *string `json:"sourceTable,omitempty"`
}

// Database defines model for Database.
type Database struct {
	Host          *string `json:"host,omitempty"`
	Password      *string `json:"password,omitempty"`
	Port          *uint64 `json:"port,omitempty"`
	Schema        *string `json:"schema,omitempty"`
	SlowThreshold *uint64 `json:"slowThreshold,omitempty"`
	Username      *string `json:"username,omitempty"`
}

// Datasource defines model for Datasource.
type Datasource struct {
	Comment        *string `json:"comment"`
	ConnectCharset *string `json:"connectCharset,omitempty"`
	ConnectParams  *string `json:"connectParams,omitempty"`
	ConnectStatus  *string `json:"connectStatus"`
	DatasourceName *string `json:"datasourceName,omitempty"`
	DbType         *string `json:"dbType,omitempty"`
	Host           *string `json:"host,omitempty"`
	Password       *string `json:"password,omitempty"`
	PdbName        *string `json:"pdbName"`
	Port           *uint64 `json:"port,omitempty"`
	ServiceName    *string `json:"serviceName"`
	Username       *string `json:"username,omitempty"`
}

// MigrateSchemaRule defines model for MigrateSchemaRule.
type MigrateSchemaRule struct {
	SourceExcludeTable *[]string           `json:"sourceExcludeTable,omitempty"`
	SourceIncludeTable *[]string           `json:"sourceIncludeTable,omitempty"`
	SourceSchema       *string             `json:"sourceSchema,omitempty"`
	SourceTableRoutes  *[]SourceTableRoute `json:"sourceTableRoutes,omitempty"`
	TargetSchema       *string             `json:"targetSchema,omitempty"`
}

// NewDatasource defines model for NewDatasource.
type NewDatasource struct {
	Datasource *[]Datasource `json:"datasource,omitempty"`
}

// RequestDeleteParam defines model for RequestDeleteParam.
type RequestDeleteParam = []string

// RequestPostParam defines model for RequestPostParam.
type RequestPostParam struct {
	Page     *uint64 `json:"page,omitempty"`
	PageSize *uint64 `json:"pageSize,omitempty"`
	Param    *string `json:"param,omitempty"`
}

// Response defines model for Response.
type Response struct {
	Code  uint64 `json:"code"`
	Data  string `json:"data"`
	Error string `json:"error"`
}

// SchemaStructRule defines model for SchemaStructRule.
type SchemaStructRule struct {
	ColumnTypeS   *string `json:"columnTypeS,omitempty"`
	ColumnTypeT   *string `json:"columnTypeT,omitempty"`
	DefaultValueS *string `json:"defaultValueS,omitempty"`
	DefaultValueT *string `json:"defaultValueT,omitempty"`
	SourceSchema  *string `json:"sourceSchema,omitempty"`
}

// SourceTableRoute defines model for SourceTableRoute.
type SourceTableRoute struct {
	SourceColumnRoutes *map[string]string `json:"sourceColumnRoutes,omitempty"`
	SourceTable        *string            `json:"sourceTable,omitempty"`
	TargetTable        *string            `json:"targetTable,omitempty"`
}

// StructMigrateParam defines model for StructMigrateParam.
type StructMigrateParam struct {
	DirectWrite        *bool   `json:"directWrite,omitempty"`
	LowerCaseFieldName *string `json:"lowerCaseFieldName,omitempty"`
	MigrateThread      *uint64 `json:"migrateThread,omitempty"`
	OutputDir          *string `json:"outputDir,omitempty"`
}

// StructMigrateRule defines model for StructMigrateRule.
type StructMigrateRule struct {
	ColumnStructRules *[]ColumnStructRule `json:"columnStructRules,omitempty"`
	SchemaStructRules *[]SchemaStructRule `json:"schemaStructRules,omitempty"`
	TableAttrsRules   *[]TableAttrsRule   `json:"tableAttrsRules,omitempty"`
	TableStructRules  *[]TableStructRule  `json:"tableStructRules,omitempty"`
	TaskStructRules   *[]TaskStructRule   `json:"taskStructRules,omitempty"`
}

// StructMigrateTask defines model for StructMigrateTask.
type StructMigrateTask struct {
	StructMigrateParam *StructMigrateParam `json:"structMigrateParam,omitempty"`
	StructMigrateRule  *StructMigrateRule  `json:"structMigrateRule,omitempty"`
	SubTaskNums        *uint64             `json:"subTaskNums,omitempty"`
	TaskName           *string             `json:"taskName,omitempty"`
	TaskRuleName       *string             `json:"taskRuleName,omitempty"`
}

// TableAttrsRule defines model for TableAttrsRule.
type TableAttrsRule struct {
	SourceSchema *string   `json:"sourceSchema,omitempty"`
	SourceTables *[]string `json:"sourceTables,omitempty"`
	TableAttrsT  *string   `json:"tableAttrsT,omitempty"`
}

// TableStructRule defines model for TableStructRule.
type TableStructRule struct {
	ColumnTypeS   *string `json:"columnTypeS,omitempty"`
	ColumnTypeT   *string `json:"columnTypeT,omitempty"`
	DefaultValueS *string `json:"defaultValueS,omitempty"`
	DefaultValueT *string `json:"defaultValueT,omitempty"`
	SourceSchema  *string `json:"sourceSchema,omitempty"`
	SourceTable   *string `json:"sourceTable,omitempty"`
}

// Task defines model for Task.
type Task struct {
	Express  *string `json:"express,omitempty"`
	Operate  *string `json:"operate,omitempty"`
	TaskName *string `json:"taskName,omitempty"`
}

// TaskMigrateRule defines model for TaskMigrateRule.
type TaskMigrateRule struct {
	Comment            *string              `json:"comment,omitempty"`
	DatasourceNameS    *string              `json:"datasourceNameS,omitempty"`
	DatasourceNameT    *string              `json:"datasourceNameT,omitempty"`
	MigrateSchemaRules *[]MigrateSchemaRule `json:"migrateSchemaRules,omitempty"`
	TaskRuleName       *string              `json:"taskRuleName,omitempty"`
}

// TaskStructRule defines model for TaskStructRule.
type TaskStructRule struct {
	ColumnTypeS   *string `json:"columnTypeS,omitempty"`
	ColumnTypeT   *string `json:"columnTypeT,omitempty"`
	DefaultValueS *string `json:"defaultValueS,omitempty"`
	DefaultValueT *string `json:"defaultValueT,omitempty"`
}

// APIPutDatabaseJSONRequestBody defines body for APIPutDatabase for application/json ContentType.
type APIPutDatabaseJSONRequestBody = Database

// APIDeleteDatasourceJSONRequestBody defines body for APIDeleteDatasource for application/json ContentType.
type APIDeleteDatasourceJSONRequestBody = RequestDeleteParam

// APIListDatasourceJSONRequestBody defines body for APIListDatasource for application/json ContentType.
type APIListDatasourceJSONRequestBody = RequestPostParam

// APIPutDatasourceJSONRequestBody defines body for APIPutDatasource for application/json ContentType.
type APIPutDatasourceJSONRequestBody = NewDatasource

// APIDeleteTaskMigrateRuleJSONRequestBody defines body for APIDeleteTaskMigrateRule for application/json ContentType.
type APIDeleteTaskMigrateRuleJSONRequestBody = RequestDeleteParam

// APIListTaskMigrateRuleJSONRequestBody defines body for APIListTaskMigrateRule for application/json ContentType.
type APIListTaskMigrateRuleJSONRequestBody = RequestPostParam

// APIPutTaskMigrateRuleJSONRequestBody defines body for APIPutTaskMigrateRule for application/json ContentType.
type APIPutTaskMigrateRuleJSONRequestBody = TaskMigrateRule

// APIDeleteTaskJSONRequestBody defines body for APIDeleteTask for application/json ContentType.
type APIDeleteTaskJSONRequestBody = Task

// APIKillTaskJSONRequestBody defines body for APIKillTask for application/json ContentType.
type APIKillTaskJSONRequestBody = Task

// APIPutTaskJSONRequestBody defines body for APIPutTask for application/json ContentType.
type APIPutTaskJSONRequestBody = Task

// APIDeleteStructMigrateTaskJSONRequestBody defines body for APIDeleteStructMigrateTask for application/json ContentType.
type APIDeleteStructMigrateTaskJSONRequestBody = RequestDeleteParam

// APIListStructMigrateTaskJSONRequestBody defines body for APIListStructMigrateTask for application/json ContentType.
type APIListStructMigrateTaskJSONRequestBody = RequestPostParam

// APIPutStructMigrateTaskJSONRequestBody defines body for APIPutStructMigrateTask for application/json ContentType.
type APIPutStructMigrateTaskJSONRequestBody = StructMigrateTask

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xbW3PiuBL+Ky6d88jBudWcHZ42k8xWpXYmSwVq92ErD8JusGZsyyO1QrIp/vuWLmAM",
	"BmRIGJjJW2KrW335ur+WnDyTiGcFzyFHSTrPREYJZNT8eMVTleU9FCrCO5WCflYIXoBABmZFZFb0nwro",
	"6V+HXGQUSYdIFCwfkRbBpwLK3yetOYm+p0QMQ6pS/JOmynuXeRnffSRXIgLrcyORnolYI5E+HdhwbpSY",
	"zJ7wwReIUOu4pkgHVNbkI+ESPQ0pqJRjLmLf5VxUNSuW47uLcinLEUYgjI+NApLycT8RIBOexr47KAki",
	"p9luIbSpqAN1lkG+Io65SlObPBQKagGe5xDhVUKFBPSuCiPUpYJmsplMDykquaWx8SwMt77RbJF40DeP",
	"vBa/IiLjwWqjN3reCM8gHti6EG3cbWe8fmYjQdG1mvpebPP48TFKVVw2GIbgjSj3gApBn8pedZO/tMZt",
	"G+YdV2h9ndnwXwFD0iH/CUsSCx2Dhb0FyTqDkIoRYAOD6pJzC+N1/SSuvPMyfU7dktF1FtzBNwUSryEF",
	"BNNFds2U09jlEmf6qm4VdAS+FaTX9tg/Dda7LbfKxx3IgueytrXH3jbotHkGD4TgwtdcAd8UExCTzt/W",
	"HrfVVM19jUcWoD/XJLZjUS5V/4qGaQe+srXQOGbIeE7TbmW1fw2VNjQd9qb9aLfx0MLEMcaK4o2ZgAj/",
	"EswGxukYcJ4CzbWSlI9BXFEJvzFI4wbTQWb31SMd9Z7nuMJC4TUTL+P0uhIpi8ifSZYOQnXUtlCiDXhq",
	"sbhreWqQwiWikM109ytyKzVvY3a/KlivW37dTvW8nB8FVgCgFdQUfG1hrE3NsoROdR3WvNVMXZJqoM28",
	"VQscvaZMdDwblKJerne73WXyXEDQii667Ugnd51TysLo7+biG7m+6p1FfUXCYyFA+uZeS1Jsgv4dkS+/",
	"biCUNRcFG87ava2k+s1IuDwu+vfe5ZPmisb+Ap2l0uV/4Kpb9l4/YvmQWz9zpJGBEWSUpTrQBUOg2a9y",
	"TEcjEG3GSYvYCwTSs8+Cy+5N0AeakRZRQgsliIXshOGckLFWRoIVeqQlHXIZSJoVKRhpTCgGSoIMaBAP",
	"MhlQGdA8gEe7BHkQQ8ZziRoQwRAoKgEyYHmACQR/FJBrLeftk0AWELEhi6jZpkVSFoE7gDmrLwsaJRCc",
	"tU+W7B2Px21qXre5GIVOVoafbq4+3vY+/u+sfdJOMEsN8Bim80G4/vC5R1rkAYS0Dp62T9onrlnktGCk",
	"Q87NI32oxMQAK4znLlBjc2a2P81Hyp6lg+nSwF23MZ4HOnE649ZX25UYz29i7Wf3xkrOLmn1ic+eR83m",
	"ZycX06S73kGLInWhC79Inpe38JtqdXbQNXiqtZ9u9KBE9F7sUjk8FhAhxIE975rqoCOpz8OzxNxPWmRk",
	"r0+r4p+YxCWXNmVEC63Ox8le/C7oCALTQAM+LD1ItT9SRRFIGZSGHWxSClWTlK7CbQqlq6pZMTdOH3j8",
	"9GI+z9RPqjcvKBRMvhMQykAJ0H11MfmHmvtJyzbO8irTo3XaxVs1T7fP6wCj5sLUCyIXe4OIi5yN8eGD",
	"xGXLtAj3yWdF465Cwrd17wMN5WW3FxZOvxNvuAAeCXPMA2MddzTuFI49XhUY1S87B0Yi04gdCY3MgKCJ",
	"RLgT3wYK0efMwB1mAy3TmEkWD/E/I52YwB0DkRhUbKCQlZDwYZK9ouGNTl4NHquIZBkcm0lkP5hY3OWA",
	"uKSmoo6AUhwYNJmgu1v2IJP1RPGKuX/jgy1ybDK2mg9+Z2lqS376ZaAmu3rRQeR2P/396zQmB5rItZ17",
	"TRpdo/7uWdxjSz6GLuwSO+3Coaz7Cr+hL1uZ3cb85a//b4P+kQ/6C7CwJeE/6u8ZEUcw7NcF9IeY+usc",
	"2zz37wsgy/scENHUFtkR8M4yz9wbFRLEAwi9ZBEo/QQC+zZQIq18hO6E4XPCJU46zwUXOHkeUAldismE",
	"tMgDFWz2l0rTFxaHLhYkpAULH07D+f93KN+evj9rn777pX12ft6+OJ3/34Nyzdn5/9/rGNxP/g0AAP//",
	"/4/SPY81AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
