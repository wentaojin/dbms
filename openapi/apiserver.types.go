// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// ColumnStructRule defines model for ColumnStructRule.
type ColumnStructRule struct {
	ColumnTypeS   *string `json:"columnTypeS,omitempty"`
	ColumnTypeT   *string `json:"columnTypeT,omitempty"`
	DefaultValueS *string `json:"defaultValueS,omitempty"`
	DefaultValueT *string `json:"defaultValueT,omitempty"`
	SourceColumn  *string `json:"sourceColumn,omitempty"`
	SourceSchema  *string `json:"sourceSchema,omitempty"`
	SourceTable   *string `json:"sourceTable,omitempty"`
}

// Database defines model for Database.
type Database struct {
	Host          *string `json:"host,omitempty"`
	Password      *string `json:"password,omitempty"`
	Port          *uint64 `json:"port,omitempty"`
	Schema        *string `json:"schema,omitempty"`
	SlowThreshold *uint64 `json:"slowThreshold,omitempty"`
	Username      *string `json:"username,omitempty"`
}

// Datasource defines model for Datasource.
type Datasource struct {
	Comment        *string `json:"comment,omitempty"`
	ConnectCharset *string `json:"connectCharset,omitempty"`
	ConnectParams  *string `json:"connectParams,omitempty"`
	ConnectStatus  *string `json:"connectStatus,omitempty"`
	DatasourceName *string `json:"datasourceName,omitempty"`
	DbType         *string `json:"dbType,omitempty"`
	HostIP         *string `json:"hostIP,omitempty"`
	HostPort       *uint64 `json:"hostPort,omitempty"`
	Password       *string `json:"password,omitempty"`
	PdbName        *string `json:"pdbName,omitempty"`
	ServiceName    *string `json:"serviceName,omitempty"`
	TableOption    *string `json:"tableOption,omitempty"`
	Username       *string `json:"username,omitempty"`
}

// MigrateSchemaRule defines model for MigrateSchemaRule.
type MigrateSchemaRule struct {
	SourceExcludeTable *[]string           `json:"sourceExcludeTable,omitempty"`
	SourceIncludeTable *[]string           `json:"sourceIncludeTable,omitempty"`
	SourceSchema       *string             `json:"sourceSchema,omitempty"`
	SourceTableRoutes  *[]SourceTableRoute `json:"sourceTableRoutes,omitempty"`
	TargetSchema       *string             `json:"targetSchema,omitempty"`
}

// RequestDeleteParam defines model for RequestDeleteParam.
type RequestDeleteParam = []string

// RequestPostParam defines model for RequestPostParam.
type RequestPostParam struct {
	Page     *uint64 `json:"page,omitempty"`
	PageSize *uint64 `json:"pageSize,omitempty"`
	Param    *string `json:"param,omitempty"`
}

// Response defines model for Response.
type Response struct {
	Code  uint64 `json:"code"`
	Data  string `json:"data"`
	Error string `json:"error"`
}

// SchemaStructRule defines model for SchemaStructRule.
type SchemaStructRule struct {
	ColumnTypeS   *string `json:"columnTypeS,omitempty"`
	ColumnTypeT   *string `json:"columnTypeT,omitempty"`
	DefaultValueS *string `json:"defaultValueS,omitempty"`
	DefaultValueT *string `json:"defaultValueT,omitempty"`
	SourceSchema  *string `json:"sourceSchema,omitempty"`
}

// SourceTableRoute defines model for SourceTableRoute.
type SourceTableRoute struct {
	SourceColumnRoutes *map[string]string `json:"sourceColumnRoutes,omitempty"`
	SourceTable        *string            `json:"sourceTable,omitempty"`
	TargetTable        *string            `json:"targetTable,omitempty"`
}

// StructMigrateParam defines model for StructMigrateParam.
type StructMigrateParam struct {
	DirectWrite        *bool   `json:"directWrite,omitempty"`
	LowerCaseFieldName *string `json:"lowerCaseFieldName,omitempty"`
	MigrateThread      *uint64 `json:"migrateThread,omitempty"`
	OutputDir          *string `json:"outputDir,omitempty"`
}

// StructMigrateRule defines model for StructMigrateRule.
type StructMigrateRule struct {
	ColumnStructRules *[]ColumnStructRule `json:"columnStructRules,omitempty"`
	SchemaStructRules *[]SchemaStructRule `json:"schemaStructRules,omitempty"`
	TableAttrsRules   *[]TableAttrsRule   `json:"tableAttrsRules,omitempty"`
	TableStructRules  *[]TableStructRule  `json:"tableStructRules,omitempty"`
	TaskStructRules   *[]TaskStructRule   `json:"taskStructRules,omitempty"`
}

// StructMigrateTask defines model for StructMigrateTask.
type StructMigrateTask struct {
	StructMigrateParam *StructMigrateParam `json:"structMigrateParam,omitempty"`
	StructMigrateRule  *StructMigrateRule  `json:"structMigrateRule,omitempty"`
	SubTaskNums        *uint64             `json:"subTaskNums,omitempty"`
	TaskName           *string             `json:"taskName,omitempty"`
	TaskRuleName       *string             `json:"taskRuleName,omitempty"`
}

// TableAttrsRule defines model for TableAttrsRule.
type TableAttrsRule struct {
	SourceSchema *string   `json:"sourceSchema,omitempty"`
	SourceTables *[]string `json:"sourceTables,omitempty"`
	TableAttrsT  *string   `json:"tableAttrsT,omitempty"`
}

// TableStructRule defines model for TableStructRule.
type TableStructRule struct {
	ColumnTypeS   *string `json:"columnTypeS,omitempty"`
	ColumnTypeT   *string `json:"columnTypeT,omitempty"`
	DefaultValueS *string `json:"defaultValueS,omitempty"`
	DefaultValueT *string `json:"defaultValueT,omitempty"`
	SourceSchema  *string `json:"sourceSchema,omitempty"`
	SourceTable   *string `json:"sourceTable,omitempty"`
}

// Task defines model for Task.
type Task struct {
	Express  *string `json:"express,omitempty"`
	Operate  *string `json:"operate,omitempty"`
	TaskName *string `json:"taskName,omitempty"`
}

// TaskMigrateRule defines model for TaskMigrateRule.
type TaskMigrateRule struct {
	Comment            *string              `json:"comment,omitempty"`
	DatasourceNameS    *string              `json:"datasourceNameS,omitempty"`
	DatasourceNameT    *string              `json:"datasourceNameT,omitempty"`
	MigrateSchemaRules *[]MigrateSchemaRule `json:"migrateSchemaRules,omitempty"`
	TaskRuleName       *string              `json:"taskRuleName,omitempty"`
}

// TaskStructRule defines model for TaskStructRule.
type TaskStructRule struct {
	ColumnTypeS   *string `json:"columnTypeS,omitempty"`
	ColumnTypeT   *string `json:"columnTypeT,omitempty"`
	DefaultValueS *string `json:"defaultValueS,omitempty"`
	DefaultValueT *string `json:"defaultValueT,omitempty"`
}

// APIPutDatabaseJSONRequestBody defines body for APIPutDatabase for application/json ContentType.
type APIPutDatabaseJSONRequestBody = Database

// APIDeleteDatasourceJSONRequestBody defines body for APIDeleteDatasource for application/json ContentType.
type APIDeleteDatasourceJSONRequestBody = RequestDeleteParam

// APIListDatasourceJSONRequestBody defines body for APIListDatasource for application/json ContentType.
type APIListDatasourceJSONRequestBody = RequestPostParam

// APIPutDatasourceJSONRequestBody defines body for APIPutDatasource for application/json ContentType.
type APIPutDatasourceJSONRequestBody = Datasource

// APIDeleteTaskMigrateRuleJSONRequestBody defines body for APIDeleteTaskMigrateRule for application/json ContentType.
type APIDeleteTaskMigrateRuleJSONRequestBody = RequestDeleteParam

// APIListTaskMigrateRuleJSONRequestBody defines body for APIListTaskMigrateRule for application/json ContentType.
type APIListTaskMigrateRuleJSONRequestBody = RequestPostParam

// APIPutTaskMigrateRuleJSONRequestBody defines body for APIPutTaskMigrateRule for application/json ContentType.
type APIPutTaskMigrateRuleJSONRequestBody = TaskMigrateRule

// APIDeleteTaskJSONRequestBody defines body for APIDeleteTask for application/json ContentType.
type APIDeleteTaskJSONRequestBody = Task

// APIKillTaskJSONRequestBody defines body for APIKillTask for application/json ContentType.
type APIKillTaskJSONRequestBody = Task

// APIPutTaskJSONRequestBody defines body for APIPutTask for application/json ContentType.
type APIPutTaskJSONRequestBody = Task

// APIDeleteStructMigrateTaskJSONRequestBody defines body for APIDeleteStructMigrateTask for application/json ContentType.
type APIDeleteStructMigrateTaskJSONRequestBody = RequestDeleteParam

// APIListStructMigrateTaskJSONRequestBody defines body for APIListStructMigrateTask for application/json ContentType.
type APIListStructMigrateTaskJSONRequestBody = RequestPostParam

// APIPutStructMigrateTaskJSONRequestBody defines body for APIPutStructMigrateTask for application/json ContentType.
type APIPutStructMigrateTaskJSONRequestBody = StructMigrateTask

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
